<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


	<bean id="dataCollector" class="pl.store.business.outbound.DefoultDataCollector" />
	<bean id="dataTransformer" class="pl.store.business.outbound.DefoultDataTransformer" />
	<bean id="lifecycleUpdater" class="pl.store.persistance.DefoultLifecycleStatusUpdaterDao" />
	<bean id="reuestSender" class="pl.store.business.outbound.TescoRequestSender"/>
	<bean id="requestTask" class="pl.store.business.outbound.RequestScheduler" />
	<bean id="orderFinder" class="pl.store.persistance.DefoultOrderFinderDao"/>

	<!-- Spring Quartz -->
	<bean id="requestJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="requestTask" />
		<property name="targetMethod" value="createAnsSendRequest" />
	</bean>


	<!-- Simple Trigger, run every 5 seconds -->
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="requestJob" />
		<property name="repeatInterval" value="5000" />
	</bean>

	<!-- Cron Trigger, run every 5 seconds -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">

		<property name="jobDetail" ref="requestJob" />
		<property name="cronExpression" value="0/5 * * * * ?" />

	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="requestJob" />
			</list>
		</property>

		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>

</beans>